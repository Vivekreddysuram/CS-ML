# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DN5OOpmriEqS3htgs165511vvfw-Yory
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


data_set = 'garden_produce_dataset.txt'


data_file = pd.read_csv(data_set, sep='\t')


data_file.fillna(0, inplace=True)

months_order = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
data_file['month'] = pd.Categorical(data_file['month'], categories=months_order, ordered=True)


total_production = data_file.groupby('year')['greens'].sum()
plt.figure(figsize=(10, 5))
plt.hist(total_production.values, bins=20, color='skyblue', edgecolor='black')
plt.title('Distribution of Garden Production in Total Over Time')
plt.xlabel('Total Output (Greens)')
plt.ylabel('Regularity')
plt.grid(True)
plt.show()


vegetable_types = data_file.columns[2:]
total_per_type = data_file[vegetable_types].sum()
plt.figure(figsize=(30, 10))
plt.scatter(total_per_type.index, total_per_type.values, c='red', marker='o')
plt.title('Distribution of Types of Vegetables')
plt.xlabel('Types of vegetables')
plt.ylabel('Number of Productions')
plt.grid(True)
plt.show()

vegetables = ['basil/herbs', 'beets', 'cabbage', 'carrots', 'collards', 'cucumbers', 'chives', 'eggplant', 'greens', 'green beans', 'jalapenos', 'kale', 'lettuce/chard', 'melons', 'okra', 'onions/garlic', 'peppers', 'potatoes', 'radish', 'spinach', 'squash', 'berries/figs', 'sugar snap peas/soy beans', 'sweet potatoes', 'tomatoes', 'Lettuce Pray', 'turnips', 'zucchini']
pivot_table = data_file.pivot_table(index='month', columns='year', values=vegetables, aggfunc='sum')

total_production = data_file.groupby('year')['greens'].sum()
plt.figure(figsize=(10, 5))
plt.plot(total_production.index, total_production.values, marker='o')
plt.title('Overall Garden Production Throughout Time')
plt.xlabel('Year')
plt.ylabel('Total Output (Greens)')
plt.grid(True)
plt.show()